# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test

  deploy:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    steps:
      # - add_ssh_keys:
      #     fingerprints:
      #       - "5a:b6:f5:b3:d8:92:b0:c2:e1:ac:8d:d6:ed:90:42:e0"
      #- checkout
      #      - run:
      #          name: Add Dokku to known_hosts
      #          command: |
      #            # ssh-keygen -R ec2-13-232-92-91.ap-south-1.compute.amazonaws.com
      #            # ssh-keygen -R 13.232.92.91
      #            # ssh-keygen -R ec2-13-232-92-91.ap-south-1.compute.amazonaws.com,13.232.92.91
      #            # ssh-keyscan -H ec2-13-232-92-91.ap-south-1.compute.amazonaws.com,13.232.92.91 >> ~/.ssh/known_hosts
      #            ssh-keyscan -H 13.232.92.91 >> ~/.ssh/known_hosts
      #            ssh-keyscan -H ec2-13-232-92-91.ap-south-1.compute.amazonaws.com >> ~/.ssh/known_hosts
      - run: make docker-build-image

workflows:
  version: 2

  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master