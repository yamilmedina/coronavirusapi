name: pr alpha deploy
on:
  issue_comment:
    types: [created, edited]

jobs:
  deploy-check:
    runs-on: ubuntu-latest
    steps:
      - name: acknowledge deployment request to commenter
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: "/alpha"
          reaction: rocket
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}

  deploy:
    runs-on: ubuntu-latest
    needs: deploy-check
    if: needs.deploy-check.outputs.triggered == 'true'
    steps:
      - name: get pull request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:issue_id
          repository: ${{ github.repository }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: trigger circle ci pipeline
        id: curl_circle_ci
        run: |
          echo "::set-output name=data::$(curl -X POST -u ${{ secrets.CIRCLE_CI_TOKEN }}: -H "Content-Type: application/json" -H "Accept: application/json" --silent -w %{stdout} \
          -d '{"branch": "${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}", "parameters": {"deploy_to_dev": true}}' \
          https://circleci.com/api/v2/project/gh/yamilmedina/coronavirusapi/pipeline)"

      - name: output execution status 
        id: comment_pull_request
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repo/issues/:issue_id/comments
          repo: ${{ github.repository }}
          issue_id: ${{ github.event.issue.number }}
          body: |
            |
            Alpha release in progress :rocket: see more info at: 
            https://app.circleci.com/pipelines/github/${{ github.repository }}/${{ fromJson(steps.curl_circle_ci.outputs.data).number }}/workflows/${{ fromJson(steps.curl_circle_ci.outputs.data).id }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"